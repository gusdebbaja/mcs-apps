apiVersion: apps/v1
kind: Deployment
metadata:
  name: kapp
  labels:
    app: kapp
spec:
  replicas: 2
  selector:
    matchLabels:
      app: kapp
  template:
    metadata:
      labels:
        app: kapp
    spec:
      containers:
      - name: kapp
        image: localhost:5002/kapp:latest
        imagePullPolicy: Never
        ports: 
        - containerPort: 8080
        env:
        - name: LINUX_APP_URL
          value: "http://192.168.1.111:5000"
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "200m"
            memory: "256Mi"
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 15
---
apiVersion: v1
kind: Service
metadata:
  name: kapp-service
spec:
  selector:
    app: kapp
  ports:
  - port: 80
    targetPort: 8080
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kapp-ingress
  namespace: kapp
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
  - host: k8s-app.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kapp-service
            port:
              number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: linux-app-url
  namespace: kapp
spec:
  ports:
  - port: 80
    targetPort: 5000
  clusterIP: None
  externalIPs:
  - 192.168.1.111